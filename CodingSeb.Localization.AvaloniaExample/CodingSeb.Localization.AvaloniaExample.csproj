<Project Sdk="Microsoft.NET.Sdk">
	
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>disable</Nullable>
    <!--Avalonia doesen't support TrimMode=link currently,but we are working on that https://github.com/AvaloniaUI/Avalonia/issues/6892 -->
    <TrimMode>copyused</TrimMode>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
  </PropertyGroup>
	
  <ItemGroup>
    <AvaloniaResource Include="Assets\**" />
    <None Remove=".gitignore" />
  </ItemGroup>
	
  <ItemGroup>
    <None Include="FodyWeavers.xsd" />
  </ItemGroup>
	
  <ItemGroup>
    <!--This helps with theme dll-s trimming.
	If you will publish your application in self-contained mode with p:PublishTrimmed=true and it will use Fluent theme Default theme will be trimmed from the output and vice versa.
	https://github.com/AvaloniaUI/Avalonia/issues/5593 -->
    <TrimmableAssembly Include="Avalonia.Themes.Fluent" />
    <TrimmableAssembly Include="Avalonia.Themes.Default" /> 
  </ItemGroup>
	
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="11.0.999-cibuild0024412-beta" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.999-cibuild0024412-beta" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.999-cibuild0024412-beta" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="11.0.999-cibuild0024412-beta" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.999-cibuild0024412-beta" />
    <PackageReference Include="PropertyChanged.Fody" Version="4.1.0" PrivateAssets="All" />
    <PackageReference Include="XamlNameReferenceGenerator" Version="1.3.4" />
  </ItemGroup>
	
  <ItemGroup>
    <ProjectReference Include="..\CodingSeb.Localization.Avalonia\CodingSeb.Localization.Avalonia.csproj" />
    <ProjectReference Include="..\CodingSeb.Localization.FodyAddin\CodingSeb.Localization.FodyAddin.csproj" />
    <ProjectReference Include="..\Localization.JsonFileLoader\Localization.JsonFileLoader.csproj" />
  </ItemGroup>
	
  <Target Name="CopyLanguagesInOuput" AfterTargets="AfterBuild">
    <ItemGroup>
      <LanguagesItems Include="$(ProjectDir)lang\*.*" />
    </ItemGroup>
    <MakeDir Directories="$(TargetDir)lang" Condition="!Exists('($(TargetDir)lang)')" />
    <Copy SourceFiles="@(LanguagesItems)" DestinationFolder="$(TargetDir)lang" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" />
  </Target>
	
</Project>
